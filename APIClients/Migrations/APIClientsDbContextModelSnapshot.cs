// <auto-generated />
using APIClients.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIClients.Migrations
{
    [DbContext(typeof(APIClientsDbContext))]
    partial class APIClientsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APIClients.Domain.Clients.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Clients", "APIClients");
                });

            modelBuilder.Entity("APIClients.Domain.Clients.Client", b =>
                {
                    b.OwnsOne("APIClients.Domain.Clients.Address", "Address", b1 =>
                        {
                            b1.Property<string>("ClientId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Local")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Local");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PostalCode");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Street");

                            b1.HasKey("ClientId");

                            b1.ToTable("Clients", "APIClients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");

                            b1.OwnsOne("System.Globalization.RegionInfo", "Country", b2 =>
                                {
                                    b2.Property<string>("AddressClientId")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("Country");

                                    b2.HasKey("AddressClientId");

                                    b2.ToTable("Clients", "APIClients");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressClientId");
                                });

                            b1.Navigation("Country")
                                .IsRequired();
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
